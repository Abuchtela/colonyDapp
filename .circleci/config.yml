version: 2.0

jobs:
  build-with-lockfile:
    docker:
      - image: circleci/node:9.10
    parallelism: 2
    working_directory: ~/colonyDapp
    steps:
      - checkout
      - restore_cache:
          keys:
          - node-modules-{{ checksum "package.json" }}
          - node-modules-
      - run:
          name: "Set up global packages"
          command: |
            yarn global add greenkeeper-lockfile@1
            yarn global add lerna
      - run:
          name: "Installing modules"
          command: yarn install
      - save_cache:
          paths:
            - node_modules
          key: node-modules-{{ checksum "package.json" }}
      - run:
          name: "Updating lockfile"
          command: $HOME/.config/yarn/global/node_modules/.bin/greenkeeper-lockfile-update
      - run:
          name: "Checking correct types"
          command: |
            mkdir -p reports/flow
            yarn flow:ci
      - run:
          name: "Linting Javascript"
          command: yarn lint:ci
      - run:
          name: "Linting Style sheets"
          command: |
            mkdir -p reports/stylelint
            yarn stylelint:ci
      - run:
          name: "Running unit tests"
          command: yarn test:ci
          environment:
            JEST_JUNIT_OUTPUT: "reports/jest/jest-results.xml"
      - store_test_results:
          path: reports
      - store_artifacts:
          path: reports
      - run:
          name: "Building library"
          command: yarn build
      - run:
          name: "Uploading updated lockfile"
          command: $HOME/.config/yarn/global/node_modules/.bin/greenkeeper-lockfile-upload
  nightly-build:
    docker:
      - image: circleci/node:9.10
    parallelism: 2
    working_directory: ~/colonyDapp
    steps:
      - checkout
      - restore_cache:
          keys:
          - node-modules-{{ checksum "package.json" }}
          - node-modules-
      - run:
          name: "Set up global packages"
          command: yarn global add lerna
      - run:
          name: "Installing modules"
          command: yarn install
      - save_cache:
          paths:
            - node_modules
          key: node-modules-{{ checksum "package.json" }}
      - run:
          name: "Checking correct types"
          command: |
            mkdir -p reports/flow
            yarn flow:ci
      - run:
          name: "Linting Javascript"
          command: yarn lint:ci
      - run:
          name: "Linting Style sheets"
          command: |
            mkdir -p reports/stylelint
            yarn stylelint:ci
      - run:
          name: "Running unit tests"
          command: yarn test:ci
          environment:
            JEST_JUNIT_OUTPUT: "reports/jest/jest-results.xml"
      - store_test_results:
          path: reports
      - store_artifacts:
          path: reports
      - run:
          name: "Building library"
          command: yarn build
  integration-testing-build:
    docker:
      - image: circleci/node:9.10
    parallelism: 2
    working_directory: ~/colonyDapp
    steps:
      - checkout
      - restore_cache:
          keys:
          - node-modules-{{ checksum "package.json" }}
          - node-modules-
      - run:
          name: "Set up global packages"
          command: yarn global add lerna
      - run:
          name: "Installing modules"
          command: yarn install
      - save_cache:
          paths:
            - node_modules
          key: node-modules-{{ checksum "package.json" }}
      - run:
          name: "Linting Integration Tests Javascript code"
          command: yarn lint:integration:ci
      - run:
          name: "Running Integration Tests"
          command: yarn test:integration:ci
          environment:
            JEST_JUNIT_OUTPUT: "reports/jest/jest-integration-tests-results.xml"
      - store_test_results:
          path: reports
      - store_artifacts:
          path: reports

workflows:
  version: 2
  commit:
    jobs:
      - build-with-lockfile
  nightly:
    triggers:
      - schedule:
          cron: "0 2 * * *"
          filters:
            branches:
              only: master
    jobs:
      - nightly-build
      - integration-testing-build
  manual:
    jobs:
      - integration-testing:
          type: approval
      - integration-testing-build:
          requires:
            - integration-testing
