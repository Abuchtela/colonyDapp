query ColonyExtensions($address: String!) {
  processedColony(address: $address) @client {
    id
    colonyAddress
    installedExtensions @client {
      id
      extensionId
      address
      details(colonyAddress: $address) {
        deprecated
        initialized
        installedBy
        installedAt
        missingPermissions
        version
      }
    }
  }
}

query ColonyExtension($colonyAddress: String!, $extensionId: String!) {
  colonyExtension(colonyAddress: $colonyAddress, extensionId: $extensionId) @client {
    id
    address
    extensionId
    details(colonyAddress: $colonyAddress) {
      deprecated
      initialized
      installedBy
      installedAt
      missingPermissions
      version
    }
  }
}

query NetworkExtensionVersion($extensionId: String) {
  networkExtensionVersion(extensionId: $extensionId) @client
}

query SubgraphExtensionVersionDeployedEvents($sortDirection: String = asc) {
  extensionVersionDeployedEvents: events(
    orderBy: "timestamp",
    orderDirection: $sortDirection,
    where: {
      name_contains: "ExtensionAddedToNetwork"
    }
  ) {
    id
    address
    name
    args
    transaction {
      id
      transactionHash: id
      block {
        id
        number: id
        timestamp
      }
    }
    timestamp
  }
}

query SubgraphExtensionEvents($colonyAddress: String!, $extensionAddress: String!, $sortDirection: String = asc) {
  extensionInstalledEvents: events(
    orderBy: "timestamp",
    orderDirection: $sortDirection,
    where: {
      name_contains: "ExtensionInstalled",
      args_contains: $colonyAddress,
    }
  ) {
    id
    address
    name
    args
    transaction {
      id
      transactionHash: id
      block {
        id
        number: id
        timestamp
      }
    }
    timestamp
  }
  extensionInitialisedEvents: events(
    orderBy: "timestamp",
    orderDirection: $sortDirection,
    where: {
      name_contains: "ExtensionInitialised",
      address: $extensionAddress
    }
  ) {
    id
    address
    name
    args
    transaction {
      id
      transactionHash: id
      block {
        id
        number: id
        timestamp
      }
    }
    timestamp
  }
}
