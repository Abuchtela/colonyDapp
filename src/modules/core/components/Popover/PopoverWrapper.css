@value arrowSize: 8px;
@value arrowBorder: 1px;
@value backgroundColor: rgb(251, 251, 251); /* --colony-white */
@value themeDarkBackgroundColor: rgb(58, 58, 58); /* --grey-1 */
@value themeGreyBackgroundColor: var(--grey-blue-2);

.main {
  z-index: calc(var(--z-index-notification) + 1);
  border-radius: var(--radius-small);
  background-color: backgroundColor;
  color: var(--grey-4);
  box-shadow: 0 0 20px -2px var(--temp-grey-blue-4);
}

.arrow {
  height: 0;
  width: 0;
  position: absolute;
  top: 0;
  left: 0;
  border: calc(arrowSize + arrowBorder) solid transparent;
  pointer-events: none;
}

.arrow::before {
  height: 0;
  width: 0;
  position: absolute;
  border: arrowSize solid transparent;
  content: '';
}

.placementTop {
  top: calc(0px - arrowSize) !important;
}

.placementRight {
  left: calc(arrowSize + arrowBorder * 2) !important;
}

.placementBottom {
  top: arrowSize !important;
}

.placementLeft {
  left: calc(0px - arrowSize - arrowBorder * 2) !important;
}

.placementTop .arrow {
  top: auto;
  bottom: calc((-2 * arrowSize) - arrowBorder);
  border-top-color: backgroundColor;
}

.placementTop .arrow::before {
  bottom: calc(-1 * (arrowSize - arrowBorder));
  left: calc(-1 * arrowSize);
}

.placementRight .arrow {
  left: calc(-2 * (arrowSize + arrowBorder));
  border-right-color: backgroundColor;
}

.placementRight .arrow::before {
  top: calc(-1 * arrowSize);
  left: calc(-1 * (arrowSize - arrowBorder));
}

.placementBottom .arrow {
  top: calc(-2 * (arrowSize + arrowBorder));
  border-bottom-color: backgroundColor;
}

.placementBottom .arrow::before {
  top: calc(-1 * (arrowSize - arrowBorder));
  left: calc(-1 * arrowSize);
}

.placementLeft .arrow {
  right: calc(-2 * (arrowSize + arrowBorder));
  left: auto;
  border-left-color: backgroundColor;
}

.placementLeft .arrow::before {
  top: calc(-1 * arrowSize);
  right: calc(-1 * (arrowSize - arrowBorder));
}

.themeDark {
  composes: main;
  background-color: themeDarkBackgroundColor;
  color: var(--colony-white);
}

.themeDark.placementTop .arrow { border-top-color: transparent; }
.themeDark.placementTop .arrow::before { border-top-color: themeDarkBackgroundColor; }

.themeDark.placementRight .arrow { border-right-color: transparent; }
.themeDark.placementRight .arrow::before { border-right-color: themeDarkBackgroundColor; }

.themeDark.placementBottom .arrow { border-bottom-color: transparent; }
.themeDark.placementBottom .arrow::before { border-bottom-color: themeDarkBackgroundColor; }

.themeDark.placementLeft .arrow { border-left-color: transparent; }
.themeDark.placementLeft .arrow::before { border-left-color: themeDarkBackgroundColor; }

.themeGrey {
  composes: main;
  background-color: themeGreyBackgroundColor;
  box-shadow: 0 0 20px -2px var(--grey-5);
}

.themeGrey.placementTop .arrow { border-top-color: transparent; }
.themeGrey.placementTop .arrow::before { border-top-color: themeGreyBackgroundColor; }

.themeGrey.placementRight .arrow { border-right-color: transparent; }
.themeGrey.placementRight .arrow::before { border-right-color: themeGreyBackgroundColor; }

.themeGrey.placementBottom .arrow { border-bottom-color: transparent; }
.themeGrey.placementBottom .arrow::before { border-bottom-color: themeGreyBackgroundColor; }

.themeGrey.placementLeft .arrow { border-left-color: transparent; }
.themeGrey.placementLeft .arrow::before { border-left-color: themeGreyBackgroundColor; }

/* State */

.stateHideArrow .arrow {
  display: none;
}
